"""
Задание: Декораторы в Python

Цель задания:
Освоить механизмы создания декораторов Python.
Практически применить знания, создав функцию декоратор и обернув ею другую функцию.

Задание:
Напишите 2 функции:
Функция, которая складывает 3 числа (sum_three)
Функция декоратор (is_prime), которая распечатывает "Простое", если результат 1ой функции будет простым числом и "Составное" в противном случае.
Пример:
result = sum_three(2, 3, 6)
print(result)

Результат консоли:
Простое
11

Примечания:
Не забудьте написать внутреннюю функцию wrapper в is_prime
Функция is_prime должна возвращать wrapper
@is_prime - декоратор для функции sum_three


*Простое число — это натуральное число больше 1, у которого есть всего два делителя: единица и само число.
*Составное число — похоже на простое. Это точно такое же натуральное число больше единицы, которое делится на единицу, на само себя и еще хотя бы на одно натуральное число.
"""


def is_prime(func):
    def wrapper(*args, **kwargs):
        result = func(*args, **kwargs)
        if result >= 1:
            for i in range(2, result):
                if result % i == 0:
                    print(f"Составное\n{result}")
                    break
            else:
                print(f"Простое\n{result}")
    return wrapper

@is_prime
def sum_three(a, b, c):
    return a + b + c

# Тестирование
sum_three(2, 3, 6)  # Простое
sum_three(2, -4, 2)  # Составное